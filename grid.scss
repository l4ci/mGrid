/**
 *
 * mGrid
 * Basic responsive mobile first x-column grid system.
 * 
 * @url https://github.com/l4ci/mGrid
 * @author Volker Otto <hello@volkerotto.net>
 * 
 **/ 

$grid-columns: 12 	!default; 	// 12, 16, whatever you like
$grid-gutter:  20px !default; 	// px only here

/**
 * Calculate column width in %
 * @param  {integer} $columns 
 * @return {integer} %
 */
@function calccol($columns){
  @return (100%/$grid-columns)*$columns;
}

*{
  &,&:before,&:after{
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }
}

.container{
  width: 100%;
  max-width: 100%;
  margin: 0 auto;
}
.row {
  display:block;
  width: 100%;
  margin: 0 0;
  padding: 0 0;
  text-align: left;
  vertical-align: top;

  &:after {
    content: "";
    display: table;
    clear: both;
  }

  & > .row{
    overflow: hidden;
    margin:0 0;
  }
}

[class*='col-'] {
  text-align: left;
  display: block;
  float: left;
  width: 100%;
  margin: 0 0;
  padding-right: $grid-gutter;

  .row &:last-of-type {
    padding-right: 0;
  }
}

/* Default */
@for $i from 1 through $grid-columns {
  .col-#{$i} {
  	width: calccol($i);
  }
}

/* Extra small devices (phones, 768px and up) */
@media (min-width: 480px){
  .container{
    max-width: 100%;
  }

  @for $i from 1 through $grid-columns {
    .xs-col-#{$i} {
      width: calccol($i);
    }
  }
}

/* Small devices (tablets, 768px and up) */
@media (min-width: 768px){ //and (max-width: 991px){
  .container{
    max-width: 750px;
  }

  @for $i from 1 through $grid-columns {
    .sd-col-#{$i} {
    	width: calccol($i);
    }
	}
}
/* Medium devices (desktops, 992px and up) */
@media (min-width: 992px){// and (max-width: 1199px){
  .container{
    max-width: 970px;
  }

  @for $i from 1 through $grid-columns {
    .md-col-#{$i} {
    	width: calccol($i);
    }
	}
}
/* Large devices (large desktops, 1200px and up) */
@media (min-width: 1200px){
  .container{
    max-width: 1170px;
  }
  
  @for $i from 1 through $grid-columns {
    .lg-col-#{$i} {
    	width: calccol($i);
    }
	}
}